{"version":3,"file":"EvaluationInput-a43b4d05.js","sources":["../../../frontend/src/components/EvaluationInput/EvaluationInput.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { Stack, TextField, IconButton } from \"@fluentui/react\";\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from \"@fluentui/react/lib/Dropdown\";\r\n\r\nimport { AnimalTurtle16Filled, Send28Filled } from \"@fluentui/react-icons\";\r\nimport { useLogin, getToken, isLoggedIn, requireAccessControl } from \"../../authConfig\";\r\nimport { ChatAppResponse, appendToBlobApi } from \"../../api\";\r\n\r\nimport styles from \"./EvaluationInput.module.css\";\r\nimport { to } from \"@react-spring/web\";\r\n\r\ninterface Props {\r\n    disabled: boolean;\r\n    question: string;\r\n    answer: ChatAppResponse;\r\n    tabName: string;\r\n    prompt: string;\r\n}\r\n\r\nconst client = useLogin ? useMsal().instance : undefined;\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 300 } };\r\n\r\nconst selectedThemen = [];\r\n\r\nconst dropdownCorrectnessOptions = [\r\n    { key: \"ja\", text: \"Ja\" },\r\n    { key: \"teils\", text: \"Teils\" },\r\n    { key: \"nein\", text: \"Nein\" }\r\n];\r\n\r\nconst dropdownThemenOptions = [\r\n    { key: \"5200\", text: \"5200\" },\r\n    { key: \"5205\", text: \"5205\" },\r\n    { key: \"5320\", text: \"5320\" },\r\n    { key: \"5500\", text: \"5500\" },\r\n    { key: \"5540\", text: \"5540\" },\r\n    { key: \"5600\", text: \"5600\" },\r\n    { key: \"ACM40e\", text: \"ACM40e\" },\r\n    { key: \"ACM80eRack\", text: \"ACM80eRack\" },\r\n    { key: \"ACM80eWand\", text: \"ACM80eWand\" },\r\n    { key: \"intus com\", text: \"INTUS COM\" },\r\n    { key: \"RFID-Zutrittsleser\", text: \"RFID-Zutrittsleser\" },\r\n    { key: \"RFID-Technologie\", text: \"RFID-Technologie\" },\r\n    { key: \"Flex Air\", text: \"Flex Air\" },\r\n    { key: \"Flex OnCard \", text: \"Flex OnCard\" },\r\n    { key: \"PegaSys\", text: \"PegaSys\" },\r\n    { key: \"DEXICON\", text: \"DEXICON\" },\r\n    { key: \"DEXIOS\", text: \"DEXIOS\" },\r\n    { key: \"INTUS COM/TPI\", text: \"INTUS COM/TPI\" },\r\n    { key: \"TCL\", text: \"TCL\" },\r\n    { key: \"Palm Secure\", text: \"Palm Secure\" },\r\n    { key: \"Fingerprint\", text: \"Fingerprint\" },\r\n    { key: \"Kaufmännisches\", text: \"Kaufmännisches\" },\r\n    { key: \"Rechtliches\", text: \"Rechtliches\" },\r\n    { key: \"Geräte-Firmware\", text: \"Geräte-Firmware\" },\r\n    { key: \"Leser-Firmware\", text: \"Leser-Firmware\" },\r\n    { key: \"Sonstiges\", text: \"Sonstiges\" }\r\n];\r\n\r\nconst dropdownBenefitsOptions = [\r\n    { key: \"Suchaufwand in interner Doku erspart.\", text: \"Suchaufwand in interner Doku erspart.\" },\r\n    { key: \"Rücksprache mit Kollegen erspart.\", text: \"Rücksprache mit Kollegen erspart.\" },\r\n    { key: \"Rücksprache mit Experten erspart.\", text: \"Rücksprache mit Experten erspart.\" },\r\n    { key: \"Sonstiges, siehe unten:\", text: \"Sonstiges, siehe unten:\" }\r\n];\r\n\r\nexport const EvaluationInput = ({ disabled, question, answer, tabName, prompt }: Props) => {\r\n    const [showInfo, setShowInfo] = useState(false);\r\n\r\n    const { instance } = useMsal();\r\n    const disableRequiredAccessControl = requireAccessControl && !isLoggedIn(instance);\r\n\r\n    const [user, setUser] = useState<string>(\"\");\r\n\r\n    const onUserChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setUser(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setUser(newValue);\r\n        }\r\n    };\r\n\r\n    const [correct_answer, setCorrectAnswer] = useState<string>(\"\");\r\n\r\n    const onCorrectAnswerChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setCorrectAnswer(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setCorrectAnswer(newValue);\r\n        }\r\n    };\r\n\r\n    const [handbuch, setHandbuch] = useState<string>(\"\");\r\n\r\n    const onHandbuchChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setHandbuch(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setHandbuch(newValue);\r\n        }\r\n    };\r\n\r\n    const [anmerkung, setAnmerkung] = useState<string>(\"\");\r\n\r\n    const onAnmerkungChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setAnmerkung(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setAnmerkung(newValue);\r\n        }\r\n    };\r\n\r\n    const [sonstiges, setSonstiges] = useState<string>(\"\");\r\n\r\n    const onSonstigesChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setSonstiges(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setSonstiges(newValue);\r\n        }\r\n    };\r\n\r\n    const [supportTicketID, setSupportTicketID] = useState<string>(\"\");\r\n\r\n    const onSupportTicketIDChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setSupportTicketID(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setSupportTicketID(newValue);\r\n        }\r\n    };\r\n\r\n    const [benefitMinuten, setBenefitMinuten] = useState<string>(\"\");\r\n\r\n    const onBenefitMinutenChange = (_ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n        if (!newValue) {\r\n            setBenefitMinuten(\"\");\r\n        } else if (newValue.length <= 5000) {\r\n            setBenefitMinuten(newValue);\r\n        }\r\n    };\r\n\r\n    const makeApiRequest = async () => {\r\n        const token = client ? await getToken(client) : undefined;\r\n        const contextList = answer.choices[0].context.thoughts[1].description;\r\n        const context: string[] = [];\r\n        if (contextList.length > 0) {\r\n            for (const dict of contextList) {\r\n                if (\"sourcepage\" in dict) {\r\n                    context.push(dict[\"sourcepage\"]);\r\n                }\r\n            }\r\n        }\r\n        const themenListe = selectedThemen.map(item => item.text);\r\n        const benefitsListe = selectedBenefits.map(item => item.text);\r\n\r\n        const currentDatetime: Date = new Date();\r\n        const newline = {\r\n            TabName: tabName,\r\n            Frage: answer.choices[0].context.thoughts[0].description,\r\n            // Prompt: answer.choices[0].context.thoughts[2].description[0],\r\n            AntwortChatGPT: answer.choices[0].message.content,\r\n            NewPrompt: prompt,\r\n            Kontext: context,\r\n            Korrektheit: selectedCorrectness?.text,\r\n            korrekte_Antwort: correct_answer,\r\n            Quelle: handbuch,\r\n            Anmerkung: anmerkung,\r\n            Benefit: benefitsListe,\r\n            BenefitMinuten: benefitMinuten,\r\n            Sonstiges: sonstiges,\r\n            Thema: themenListe,\r\n            Benutzer: user,\r\n            Zeitstempel: currentDatetime,\r\n            model: \"gpt-4\"\r\n        };\r\n        const dataToAppend = JSON.stringify(newline) + \"\\n\";\r\n\r\n        try {\r\n            const result = await appendToBlobApi(dataToAppend, token);\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            setShowInfo(true);\r\n            setUser(\"\");\r\n            setAnmerkung(\"\");\r\n            setSonstiges(\"\");\r\n            setHandbuch(\"\");\r\n            setSupportTicketID(\"\");\r\n            setCorrectAnswer(\"\");\r\n            setSelectedBenefits([]);\r\n            setSelectedCorrectness(undefined);\r\n            setSelectedThemen([]);\r\n            const closeTimeoutId = setTimeout(() => {\r\n                setShowInfo(false);\r\n            }, 6000);\r\n        }\r\n    };\r\n\r\n    const [selectedCorrectness, setSelectedCorrectness] = useState<IDropdownOption>();\r\n\r\n    const [selectedBenefits, setSelectedBenefits] = useState<IDropdownOption[]>([]);\r\n\r\n    const [selectedThemen, setSelectedThemen] = useState<IDropdownOption[]>([]);\r\n\r\n    const onChangeSelectedThemen = (\r\n        event: React.FormEvent<HTMLDivElement> | undefined,\r\n        item: IDropdownOption<any> | undefined,\r\n        index: number | undefined\r\n    ): void => {\r\n        if (!item) {\r\n            // Handle the case when item is undefined\r\n            console.log(\"Keine Auswahl!\");\r\n            return;\r\n        }\r\n        const updatedSelection = [...selectedThemen];\r\n\r\n        if (item.selected) {\r\n            // Add the selected item to the array\r\n            updatedSelection.push(item);\r\n        } else {\r\n            // Remove the unselected item from the array\r\n            const indexToRemove = updatedSelection.findIndex(option => option.key === item.key);\r\n            if (indexToRemove !== -1) {\r\n                updatedSelection.splice(indexToRemove, 1);\r\n            }\r\n        }\r\n\r\n        setSelectedThemen(updatedSelection);\r\n    };\r\n\r\n    const onChangeSelectedBenefit = (\r\n        event: React.FormEvent<HTMLDivElement> | undefined,\r\n        item: IDropdownOption<any> | undefined,\r\n        index: number | undefined\r\n    ): void => {\r\n        if (!item) {\r\n            // Handle the case when item is undefined\r\n            console.log(\"Keine Auswahl!\");\r\n            return;\r\n        }\r\n        const updatedSelection = [...selectedBenefits];\r\n\r\n        if (item.selected) {\r\n            // Add the selected item to the array\r\n            updatedSelection.push(item);\r\n        } else {\r\n            // Remove the unselected item from the array\r\n            const indexToRemove = updatedSelection.findIndex(option => option.key === item.key);\r\n            if (indexToRemove !== -1) {\r\n                updatedSelection.splice(indexToRemove, 1);\r\n            }\r\n        }\r\n\r\n        setSelectedBenefits(updatedSelection);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {showInfo && (\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: \"10px\",\r\n                        right: \"10px\",\r\n                        background: \"#9CBF2B\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                        boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\"\r\n                    }}\r\n                >\r\n                    <p>Gespeichert!</p>\r\n                </div>\r\n            )}\r\n            {\r\n                <Stack className={styles.evaluationContainer}>\r\n                    <Stack horizontal className={styles.evaluationInputContainer}>\r\n                        <Dropdown\r\n                            label=\"Ist die Antwort korrekt?\"\r\n                            selectedKey={selectedCorrectness ? selectedCorrectness.key : undefined}\r\n                            onChange={(e, opt, index) => {\r\n                                setSelectedCorrectness(opt);\r\n                            }}\r\n                            placeholder=\"Wähle eine Option\"\r\n                            options={dropdownCorrectnessOptions}\r\n                            styles={dropdownStyles}\r\n                        />\r\n                    </Stack>\r\n                    {(selectedCorrectness?.text === \"Nein\" || selectedCorrectness?.text === \"Teils\") && (\r\n                        <div>\r\n                            <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                                <TextField\r\n                                    className={styles.evaluationInputTextContainer}\r\n                                    resizable={false}\r\n                                    placeholder={\"Bitte gib die richtige Antwort an: \"}\r\n                                    value={correct_answer}\r\n                                    onChange={onCorrectAnswerChange}\r\n                                    maxLength={4000}\r\n                                />\r\n                            </Stack>\r\n                            <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                                <TextField\r\n                                    className={styles.evaluationInputTextContainer}\r\n                                    resizable={false}\r\n                                    placeholder={\"In welchem Handbuch steht die Antwort? \"}\r\n                                    value={handbuch}\r\n                                    onChange={onHandbuchChange}\r\n                                />\r\n                            </Stack>\r\n                            <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                                <TextField\r\n                                    className={styles.evaluationInputTextContainer}\r\n                                    resizable={false}\r\n                                    placeholder={\"Anmerkung: \"}\r\n                                    value={anmerkung}\r\n                                    onChange={onAnmerkungChange}\r\n                                    maxLength={4000}\r\n                                />\r\n                            </Stack>\r\n                        </div>\r\n                    )}\r\n                    <Stack horizontal className={styles.evaluationInputContainer}>\r\n                        <Dropdown\r\n                            label=\"Auf welches Thema bezieht sich die Frage?\"\r\n                            selectedKeys={selectedThemen?.map(option => option.key.toString())}\r\n                            onChange={onChangeSelectedThemen}\r\n                            placeholder=\"Wähle eine Option\"\r\n                            options={dropdownThemenOptions}\r\n                            styles={dropdownStyles}\r\n                            multiSelect\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                        <TextField\r\n                            className={styles.evaluationInputTextContainer}\r\n                            resizable={false}\r\n                            placeholder={\"Support Ticket ID: \"}\r\n                            value={supportTicketID}\r\n                            onChange={onSupportTicketIDChange}\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputContainer}>\r\n                        <Dropdown\r\n                            label=\"Was hat dir die Antwort gebracht?\"\r\n                            selectedKeys={selectedBenefits?.map(option => option.key.toString())}\r\n                            onChange={onChangeSelectedBenefit}\r\n                            placeholder=\"Wähle eine Option\"\r\n                            options={dropdownBenefitsOptions}\r\n                            styles={dropdownStyles}\r\n                            multiSelect\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                        <TextField\r\n                            className={styles.evaluationInputTextContainer}\r\n                            resizable={false}\r\n                            placeholder={\"Wieviel Zeitersparnis (in Minuten) hat dir Athena gebracht?\"}\r\n                            value={benefitMinuten}\r\n                            onChange={onBenefitMinutenChange}\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                        <TextField\r\n                            className={styles.evaluationInputTextContainer}\r\n                            resizable={false}\r\n                            placeholder={\"Sonstiges: \"}\r\n                            value={sonstiges}\r\n                            onChange={onSonstigesChange}\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputTextContainer}>\r\n                        <TextField\r\n                            className={styles.evaluationInputTextContainer}\r\n                            resizable={false}\r\n                            placeholder={\"Bitte gib deinen Namen an: \"}\r\n                            value={user}\r\n                            onChange={onUserChange}\r\n                        />\r\n                    </Stack>\r\n                    <Stack horizontal className={styles.evaluationInputButtonsContainer}>\r\n                        <IconButton\r\n                            style={{ color: \"black\", marginLeft: \"10px\" }}\r\n                            iconProps={{ iconName: \"Save\" }}\r\n                            title=\"Speichern\"\r\n                            ariaLabel=\"Speichern\"\r\n                            onClick={() => makeApiRequest()}\r\n                        />\r\n                    </Stack>\r\n                </Stack>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n"],"names":["client","useLogin","useMsal","dropdownStyles","dropdownCorrectnessOptions","dropdownThemenOptions","dropdownBenefitsOptions","EvaluationInput","disabled","question","answer","tabName","prompt","showInfo","setShowInfo","useState","instance","requireAccessControl","isLoggedIn","user","setUser","onUserChange","_ev","newValue","correct_answer","setCorrectAnswer","onCorrectAnswerChange","handbuch","setHandbuch","onHandbuchChange","anmerkung","setAnmerkung","onAnmerkungChange","sonstiges","setSonstiges","onSonstigesChange","supportTicketID","setSupportTicketID","onSupportTicketIDChange","benefitMinuten","setBenefitMinuten","onBenefitMinutenChange","makeApiRequest","token","getToken","contextList","context","dict","themenListe","selectedThemen","item","benefitsListe","selectedBenefits","currentDatetime","newline","selectedCorrectness","dataToAppend","result","appendToBlobApi","e","setSelectedBenefits","setSelectedCorrectness","setSelectedThemen","onChangeSelectedThemen","event","index","updatedSelection","indexToRemove","option","onChangeSelectedBenefit","jsx","jsxs","Stack","styles","Dropdown","opt","TextField","IconButton"],"mappings":"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"}